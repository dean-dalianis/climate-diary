{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P0C89709D7A7DC177"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 0
      },
      "id": 25,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^last_run gsoy_importer$/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.3",
      "targets": [
        {
          "alias": "Last Run",
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "metadata",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: 1700-01-01T00:00:00Z)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"metadata\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"last_run\")\r\n  |> filter(fn: (r) => r[\"script\"] == \"gsoy_importer\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "last_run"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "script::tag",
              "operator": "=",
              "value": "gsom_fetcher"
            }
          ]
        }
      ],
      "title": "Last Update",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P0C89709D7A7DC177"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 3,
        "y": 0
      },
      "id": 26,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "distinctCount"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.3",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "metadata",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"climate-bucket\", tag: \"country_iso\", start: 1700-01-01T00:00:00Z)\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "last_run"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "script::tag",
              "operator": "=",
              "value": "gsom_fetcher"
            }
          ]
        }
      ],
      "title": "Number of Countries",
      "type": "stat"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 44,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 7
          },
          "id": 57,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"Maximum Temperature trend\"})\r\n  |> yield(name: \"Maximum Temperature trend\")\r\n",
              "refId": "B"
            },
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Minimum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"Minimum Temperature trend\"})\r\n  |> yield(name: \"Minimum Temperature trend\")\r\n",
              "refId": "D"
            }
          ],
          "title": "Extreme Temperatures (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.drawStyle",
                    "value": "points"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "C"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "D"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 7
          },
          "id": 61,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"Maximum Temperature trend\"})\r\n  |> yield(name: \"Maximum Temperature trend\")\r\n",
              "refId": "B"
            },
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Minimum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Minimum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"Minimum Temperature trend\"})\r\n  |> yield(name: \"Minimum Temperature trend\")\r\n",
              "refId": "D"
            }
          ],
          "title": "Extreme Temperatures (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "id": 58,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Maximum Temperature (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "id": 62,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Maximum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Maximum Temperature (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 0,
            "y": 34
          },
          "id": 59,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Average_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Average Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Average_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Average Temperature (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 12,
            "y": 34
          },
          "id": 63,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Average_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Average Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Average_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Average Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Average Temperature (decadal",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 0,
            "y": 48
          },
          "id": 60,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Minimum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Minimum Temperature (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 12,
            "x": 12,
            "y": 48
          },
          "id": 64,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Minimum Temperature\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Minimum_Temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: min, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Minimum Temperature (decadal)",
          "type": "timeseries"
        }
      ],
      "title": "Temperature",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 46,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 47,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Total Precipitation (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 71,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n|> yield(name: \"original\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Total Precipitation (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "semi-dark-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 21
          },
          "id": 45,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal_max = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal_max   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Extreme Maximum Precipitation (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "semi-dark-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 72,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal_max = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Extreme_Maximum_Precipitation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Maximum Precipitation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal_max   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Extreme Maximum Precipitation (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-purple",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 34
          },
          "id": 48,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Thunder\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days With Thunder\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal_mean = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Thunder\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days With Thunder\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal_mean   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Days With Thunder (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 34
          },
          "id": 73,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Thunder\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days With Thunder\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal_mean = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Thunder\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days With Thunder\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n\r\noriginal_mean   \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Days With Thunder (decadal)",
          "type": "timeseries"
        }
      ],
      "title": "Precipitation",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 49,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "id": 50,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Total Snowfall (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "id": 67,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Total Snowfall (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 21
          },
          "id": 52,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snow_Depth\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snow Depth\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snow_Depth\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snow Depth\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Highest Daily Snow Depth (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 68,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snow_Depth\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snow Depth\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snow_Depth\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snow Depth\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Highest Daily Snow Depth (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 33
          },
          "id": 51,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal  \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n\r\n",
              "refId": "B"
            }
          ],
          "title": "Highest Daily Snowfall (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 33
          },
          "id": 69,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"max\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Highest_Daily_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: max, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Highest Daily Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal  \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n\r\n",
              "refId": "B"
            }
          ],
          "title": "Highest Daily Snowfall (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-green",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 45
          },
          "id": 53,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Days with Snow (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 45
          },
          "id": 70,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Snowfall\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Snowfall\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")\r\n",
              "refId": "B"
            }
          ],
          "title": "Days with Snow (decadal)",
          "type": "timeseries"
        }
      ],
      "title": "Snow",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 54,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 55,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Evaporation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Evaporation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal= from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Evaporation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Evaporation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal  \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Total Evaporation (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "lengthmm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 65,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Evaporation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Evaporation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal= from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total_Evaporation\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Evaporation\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\noriginal  \r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Total Evaporation (decadal)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-purple",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 21
          },
          "id": 56,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Fog\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Fog\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Fog\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Fog\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n  \r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Days with Fog (yearly)",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P0C89709D7A7DC177"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "d"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        0,
                        10
                      ],
                      "fill": "dot"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "purple",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 66,
          "interval": "365d",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "timezone": [
              "utc"
            ],
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Max: $country_name",
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "groupBy": [
                {
                  "params": [
                    "365d"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "Extreme_Maximum_Temperature_yearly_average",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Fog\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Fog\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n  |> yield(name: \"mean\")\r\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "country_id::tag",
                  "operator": "=~",
                  "value": "/^$country_id$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "P0C89709D7A7DC177"
              },
              "hide": false,
              "query": "import \"contrib/anaisdg/statsmodels\"\r\n\r\noriginal = from(bucket: \"climate-bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Number_of_Days_with_Fog\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"country_iso\"] == \"${country_iso}\")\r\n  |> aggregateWindow(every: 10y, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _measurement: \"Days with Fog\" }))\r\n  |> map(fn: (r) => ({ r with _field: \"\" }))\r\n  |> map(fn: (r) => ({ r with country_iso: \"\" }))\r\n\r\n  \r\noriginal\r\n  |> statsmodels.linearRegression()\r\n  |> drop(columns: [\"N\", \"slope\", \"sx\", \"sxx\", \"sxy\", \"sy\", \"x\", \"y\", \"errors\"])\r\n  |> rename(columns: {\"y_hat\": \"trend\"})\r\n  |> yield(name: \"trend\")",
              "refId": "B"
            }
          ],
          "title": "Days with Fog (decadal)",
          "type": "timeseries"
        }
      ],
      "title": "Evaporation",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "US",
          "value": "US"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P0C89709D7A7DC177"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"climate-bucket\", tag: \"country_iso\", start: v.timeRangeStart, stop: v.timeRangeStop)",
        "hide": 0,
        "includeAll": false,
        "label": "Country ISO",
        "multi": false,
        "name": "country_iso",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"climate-bucket\", tag: \"country_iso\", start: v.timeRangeStart, stop: v.timeRangeStop)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "1877-07-01T06:00:00.000Z",
    "to": "2020-01-01T00:00:00.000Z"
  },
  "timepicker": {},
  "timezone": "utc",
  "title": "NOAA GSOM Dashboard",
  "uid": "c351f1fe-59e9-4758-b061-93603cbedc6d",
  "version": 13,
  "weekStart": ""
}